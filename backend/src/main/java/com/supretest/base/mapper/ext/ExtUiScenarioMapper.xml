<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.supretest.base.mapper.ext.ExtUiScenarioMapper">

    <resultMap id="BaseResultMap" type="com.supretest.ui.dto.UiScenarioDTO"
               extends="com.supretest.base.mapper.UiScenarioMapper.BaseResultMap">
        <result column="project_name" property="projectName"/>
        <result column="user_name" property="userName"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                not like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                between #{${object}.value[0]} and #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "current user"'>
                = '${@com.supretest.commons.utils.SessionUtils@getUserId()}'
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>
    <sql id="combine">
        <if test='${condition}.name != null and (${name} == null or ${name} == "")'>
            and ui_scenario.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test="${condition}.followPeople != null">
            and ui_scenario.id in (
            select scenario_id from ui_scenario_follow where follow_id
            <include refid="condition">
                <property name="object" value="${condition}.followPeople"/>
            </include>
            )
        </if>
        <if test="${condition}.updateTime != null">
            and ui_scenario.update_time
            <include refid="condition">
                <property name="object" value="${condition}.updateTime"/>
            </include>
        </if>
        <if test="${condition}.createTime != null">
            and ui_scenario.create_time
            <include refid="condition">
                <property name="object" value="${condition}.createTime"/>
            </include>
        </if>
        <if test="${condition}.priority != null">
            and ui_scenario.level
            <include refid="condition">
                <property name="object" value="${condition}.priority"/>
            </include>
        </if>
        <if test="${condition}.creator != null">
            and ui_scenario.create_user
            <include refid="condition">
                <property name="object" value="${condition}.creator"/>
            </include>
        </if>
        <if test='${condition}.tags != null and ${objectKey}.operator == "not like"'>
            and (ui_scenario.tags is null or ui_scenario.tags
                <include refid="condition">
                    <property name="object" value="${condition}.tags"/>
                </include>
            )
        </if>
        <if test='${condition}.tags != null and ${objectKey}.operator == "like"'>
            and ui_scenario.tags
            <include refid="condition">
                <property name="object" value="${condition}.tags"/>
            </include>
        </if>

        <if test="${condition}.status != null">
            and ui_scenario.last_result
            <include refid="condition">
                <property name="object" value="${condition}.status"/>
            </include>
        </if>

    </sql>
    <select id="list" resultMap="BaseResultMap">
        select ui_scenario.id, ui_scenario.project_id, ui_scenario.sub_project_id, ui_scenario.tags, ui_scenario.user_id, ui_scenario.num,
        ui_scenario.custom_num, ui_scenario.version, ui_scenario.environment_type, ui_scenario.environment_group_id,
        ui_scenario.version_id, ui_scenario.ref_id, project_version.name as version_name,
        <if test="request.selectEnvironment == true">
            ui_scenario.environment_json as env,
        </if>
        ui_scenario.module_id,ui_scenario.module_path, ui_scenario.name, ui_scenario.level,
        ui_scenario.status, ui_scenario.principal, ui_scenario.step_total,
        ui_scenario.last_result,ui_scenario.pass_rate,ui_scenario.report_id, ui_scenario.use_url,
        ui_scenario.schedule, ui_scenario.description, ui_scenario.create_time, ui_scenario.update_time,
        project.name as project_name, user.name as user_name,deleteUser.name AS delete_user,ui_scenario.delete_time
        ,u2.name as principal_name,
        ui_scenario.create_user as creator , user.name as creator_name,zendao_project.zendao_project_name as sub_project_name
        from ui_scenario
        left join project on ui_scenario.project_id = project.id
        left join zendao_project on ui_scenario.sub_project_id = zendao_project.id
        left join user on ui_scenario.user_id = user.id and ui_scenario.create_user = user.id
        left join user deleteUser on ui_scenario.delete_user_id = deleteUser.id
        left join user u2 on ui_scenario.principal = u2.id
        left join project_version on ui_scenario.project_id = project_version.project_id AND project_version.id =
        ui_scenario.version_id
        <include refid="queryWhereCondition"/>
<!--        <include refid="com.supretest.base.mapper.ext.ExtBaseMapper.orders"/>-->

    </select>

    <select id="selectIds" resultType="com.supretest.ui.dto.UiScenarioDTO">
        select ui_scenario.*, project_version.name as version_name, project.version_enable
        from ui_scenario
        LEFT JOIN project_version on project_version.project_id = ui_scenario.project_id and project_version.id = version_id
        LEFT JOIN project on ui_scenario.project_id = project.id
        WHERE ui_scenario.id in
        <foreach collection="ids" item="v" separator="," open="(" close=")">
            #{v}
        </foreach>
    </select>

    <select id="selectByIds" resultType="com.supretest.base.domain.UiScenarioWithBLOBs">
        select * from ui_scenario where id in (${ids}) ORDER BY FIND_IN_SET(id,${oderId})
    </select>

    <select id="selectById" resultMap="BaseResultMap">
        select ui_scenario.*, project_version.name as version_name, project.version_enable
        from ui_scenario
        LEFT JOIN project_version on project_version.project_id = ui_scenario.project_id and project_version.id = version_id
        LEFT JOIN project on ui_scenario.project_id = project.id
        WHERE ui_scenario.id = #{id}
    </select>

    <sql id="queryWhereCondition">
        <where>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                    <property name="name" value="request.name"/>
                    <property name="objectKey" value="request.combine.tags"/>
                </include>
            </if>

            <if test="request.name != null">
                and (ui_scenario.name like CONCAT('%', #{request.name},'%')
                or ui_scenario.tags like CONCAT('%', #{request.name},'%')
                or ui_scenario.num like CONCAT('%', #{request.name},'%')
                or ui_scenario.custom_num like CONCAT('%', #{request.name},'%'))
            </if>

            <if test="request.notEqStatus != null">
                and (ui_scenario.status is null or ui_scenario.status != #{request.notEqStatus})
            </if>

            <if test="request.workspaceId != null">
                AND project.workspace_id = #{request.workspaceId}
            </if>
            <if test="request.id != null">
                AND ui_scenario.id = #{request.id}
            </if>
            <if test="request.userId != null">
                AND ui_scenario.user_id = #{request.userId}
            </if>
            <if test="request.moduleId != null">
                AND ui_scenario.module_id = #{request.moduleId}
            </if>
            <if test="request.projectId != null">
                AND ui_scenario.project_id = #{request.projectId}
            </if>
            <if test="request.subProjectId != null">
                AND ui_scenario.sub_project_id = #{request.subProjectId}
            </if>
            <if test="request.createTime >0 ">
                AND ui_scenario.create_time >= #{request.createTime}
            </if>
            <if test="request.ids != null and request.ids.size() > 0">
                AND ui_scenario.id in
                <foreach collection="request.ids" item="itemId" separator="," open="(" close=")">
                    #{itemId}
                </foreach>
            </if>
            <choose>
                <when test="request.moduleIds != null and request.moduleIds.size() > 0">
                    AND ui_scenario.module_id in
                    <foreach collection="request.moduleIds" item="nodeId" separator="," open="(" close=")">
                        #{nodeId}
                    </foreach>
                </when>
                <when test="request.projectId != null">
                    AND project.id = #{request.projectId}
                </when>
            </choose>
            <if test="request.filters != null and request.filters.size() > 0">
                <foreach collection="request.filters.entrySet()" index="key" item="values">
                    <if test="values != null and values.size() > 0">
                        <choose>
                            <when test="key=='status'">
                                and ui_scenario.status in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                            <when test="key=='user_id'">
                                and ui_scenario.user_id in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                            <when test="key=='level'">
                                and ui_scenario.level in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                            <when test="key=='last_result'">
                                and ui_scenario.last_result in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                            <when test="key=='project_id'">
                                and ui_scenario.project_id in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                            <when test="key=='principal'">
                                and ui_scenario.principal in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                            <when test="key=='principal_name'">
                                and ui_scenario.principal in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                            <when test="key=='user_name'">
                                and ui_scenario.user_id in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                            <when test="key=='creator'">
                                and ui_scenario.create_user in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>

                            <when test="key=='version_id'">
                                and ui_scenario.version_id in
                                <foreach collection="values" item="value" separator="," open="(" close=")">
                                    #{value}
                                </foreach>
                            </when>
                        </choose>
                    </if>
                </foreach>
            </if>
            <if test="request.filters == null || request.filters.size() == 0 ">
                and (ui_scenario.status is null or ui_scenario.status != 'Trash')
            </if>
            <if test="request.executeStatus == 'unExecute'">
                and ui_scenario.last_result IS NULL
            </if>
            <if test="request.executeStatus == 'executeFailed'">
                and ui_scenario.last_result = 'Fail'
            </if>
            <if test="request.executeStatus == 'executePass'">
                and ui_scenario.last_result = 'Success'
            </if>
<!--            <if test="request.notInTestPlan">-->
<!--                and ui_scenario.id not in (-->
<!--                select pc.ui_scenario_id-->
<!--                from test_plan_ui_scenario pc-->
<!--                where pc.test_plan_id = #{request.planId}-->
<!--                )-->
<!--            </if>-->
        </where>
    </sql>

    <select id="selectIdsByQuery" resultType="java.lang.String">
        select api_scenario.id
        from api_scenario
        left join project on api_scenario.project_id = project.id
        <include refid="queryWhereCondition"/>
    </select>

</mapper>
