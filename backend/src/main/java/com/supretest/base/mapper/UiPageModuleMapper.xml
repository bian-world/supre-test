<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.supretest.base.mapper.UiPageModuleMapper">
  <resultMap id="BaseResultMap" type="com.supretest.base.domain.UiPageModule">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="protocol" jdbcType="VARCHAR" property="protocol" />
    <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="pos" jdbcType="DOUBLE" property="pos" />
    <result column="create_time" jdbcType="BIGINT" property="createTime" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="zentao_tree_id" jdbcType="VARCHAR" property="zentaoTreeId" />
    <result column="zentao_branch_id" jdbcType="VARCHAR" property="zentaoBranchId" />
    <result column="zentao_branch_name" jdbcType="VARCHAR" property="zentaoBranchName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_id, `name`,  parent_id, `level`, pos, create_time, update_time,
    create_user, zentao_tree_id, zentao_branch_id, zentao_branch_name
  </sql>
  <select id="selectByExample" parameterType="com.supretest.base.domain.UiPageModuleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ui_page_module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ui_page_module
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ui_page_module
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.supretest.base.domain.UiPageModuleExample">
    delete from ui_page_module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.supretest.base.domain.UiPageModule">
    insert into ui_page_module (id, project_id, `name`, 
      parent_id, `level`,
      pos, create_time, update_time, 
      create_user, zentao_tree_id, zentao_branch_id, 
      zentao_branch_name)
    values (#{id,jdbcType=VARCHAR}, #{projectId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER},
      #{pos,jdbcType=DOUBLE}, #{createTime,jdbcType=BIGINT}, #{updateTime,jdbcType=BIGINT}, 
      #{createUser,jdbcType=VARCHAR}, #{zentaoTreeId,jdbcType=VARCHAR}, #{zentaoBranchId,jdbcType=VARCHAR}, 
      #{zentaoBranchName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.supretest.base.domain.UiPageModule">
    insert into ui_page_module
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="name != null">
        `name`,
      </if>

      <if test="parentId != null">
        parent_id,
      </if>
      <if test="level != null">
        `level`,
      </if>
      <if test="pos != null">
        pos,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="zentaoTreeId != null">
        zentao_tree_id,
      </if>
      <if test="zentaoBranchId != null">
        zentao_branch_id,
      </if>
      <if test="zentaoBranchName != null">
        zentao_branch_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>

      <if test="parentId != null">
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="pos != null">
        #{pos,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="zentaoTreeId != null">
        #{zentaoTreeId,jdbcType=VARCHAR},
      </if>
      <if test="zentaoBranchId != null">
        #{zentaoBranchId,jdbcType=VARCHAR},
      </if>
      <if test="zentaoBranchName != null">
        #{zentaoBranchName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.supretest.base.domain.UiPageModuleExample" resultType="java.lang.Long">
    select count(*) from ui_page_module
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ui_page_module
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>

      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        `level` = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.pos != null">
        pos = #{record.pos,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.zentaoTreeId != null">
        zentao_tree_id = #{record.zentaoTreeId,jdbcType=VARCHAR},
      </if>
      <if test="record.zentaoBranchId != null">
        zentao_branch_id = #{record.zentaoBranchId,jdbcType=VARCHAR},
      </if>
      <if test="record.zentaoBranchName != null">
        zentao_branch_name = #{record.zentaoBranchName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ui_page_module
    set id = #{record.id,jdbcType=VARCHAR},
      project_id = #{record.projectId,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=VARCHAR},
      `level` = #{record.level,jdbcType=INTEGER},
      pos = #{record.pos,jdbcType=DOUBLE},
      create_time = #{record.createTime,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      zentao_tree_id = #{record.zentaoTreeId,jdbcType=VARCHAR},
      zentao_branch_id = #{record.zentaoBranchId,jdbcType=VARCHAR},
      zentao_branch_name = #{record.zentaoBranchName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.supretest.base.domain.UiPageModule">
    update ui_page_module
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        `level` = #{level,jdbcType=INTEGER},
      </if>
      <if test="pos != null">
        pos = #{pos,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="zentaoTreeId != null">
        zentao_tree_id = #{zentaoTreeId,jdbcType=VARCHAR},
      </if>
      <if test="zentaoBranchId != null">
        zentao_branch_id = #{zentaoBranchId,jdbcType=VARCHAR},
      </if>
      <if test="zentaoBranchName != null">
        zentao_branch_name = #{zentaoBranchName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.supretest.base.domain.UiPageModule">
    update ui_page_module
    set project_id = #{projectId,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      `level` = #{level,jdbcType=INTEGER},
      pos = #{pos,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=BIGINT},
      create_user = #{createUser,jdbcType=VARCHAR},
      zentao_tree_id = #{zentaoTreeId,jdbcType=VARCHAR},
      zentao_branch_id = #{zentaoBranchId,jdbcType=VARCHAR},
      zentao_branch_name = #{zentaoBranchName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="getNodeTreeByProjectId" resultType="com.supretest.ui.dto.UiPageModuleDTO">
    select
    <include refid="Base_Column_List"/>
    from ui_page_module
    where ui_page_module.project_id = #{projectId}
    order by ui_page_module.pos asc
  </select>

  <select id="getNameById" resultType="java.lang.String">
    select name from api_module
    where id = #{0}
  </select>

  <update id="updatePos">
    update ui_page_module set pos = #{pos} where id = #{id}
  </update>
</mapper>